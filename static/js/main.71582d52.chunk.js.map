{"version":3,"sources":["api/users.js","api/categories.js","api/products.js","components/Product/Product.jsx","components/ProductsTable/ProductTable.jsx","App.jsx","index.jsx"],"names":["id","name","sex","title","icon","ownerId","categoryId","Product","product","category","user","className","cn","ProductTable","products","sortType","isReversed","onSortTypeChange","onIsReversedChange","sortBy","newSortType","secondClick","thirdClick","href","onClick","map","key","App","productsFromServer","categoriesFromServer","find","_category","usersFromServer","_user","useState","query","setQuery","selectedUserId","setSelectedUserId","selectedCategory","setSelectedCategory","setSortType","setIsReversed","visibleProducts","filter","productName","toLowerCase","normalizedQuery","trim","includes","length","sort","prA","prB","localeCompare","reverse","getVisibleProducts","type","placeholder","value","onChange","event","target","currentCategory","current","onCategoryClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71582d52.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport cn from 'classnames';\n\nexport const Product = (\n  { product: { id, name, category, user } },\n) => (\n  <tr data-cy=\"Product\">\n    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n      {id}\n    </td>\n\n    <td data-cy=\"ProductName\">{name}</td>\n    <td data-cy=\"ProductCategory\">\n      {`${category.icon} - ${category.title}`}\n    </td>\n\n    <td\n      data-cy=\"ProductUser\"\n      className={cn({\n        'has-text-danger': user?.sex === 'f',\n        'has-text-link': user?.sex === 'm',\n      })}\n    >\n      {user.name}\n    </td>\n  </tr>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Product } from '../Product/Product';\n\nexport const ProductTable = (\n  { products, sortType, isReversed, onSortTypeChange, onIsReversedChange },\n) => {\n  function sortBy(newSortType) {\n    const firstClick = newSortType !== sortType;\n    const secondClick = newSortType === sortType && !isReversed;\n    const thirdClick = newSortType === sortType && isReversed;\n\n    if (firstClick) {\n      onSortTypeChange(newSortType);\n      onIsReversedChange(false);\n\n      return;\n    }\n\n    if (secondClick) {\n      onSortTypeChange(newSortType);\n      onIsReversedChange(true);\n\n      return;\n    }\n\n    if (thirdClick) {\n      onSortTypeChange('');\n      onIsReversedChange(false);\n    }\n  }\n\n  return (\n    <table\n      data-cy=\"ProductTable\"\n      className=\"table is-striped is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              ID\n\n              <a\n                href=\"#/\"\n                onClick={() => sortBy('ID')}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': sortType !== 'ID',\n                      'fa-sort-down': sortType === 'ID' && isReversed,\n                      'fa-sort-up': sortType === 'ID' && !isReversed,\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Product\n\n              <a\n                href=\"#/\"\n                onClick={() => sortBy('Product')}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': sortType !== 'Product',\n                      'fa-sort-down': sortType === 'Product'\n                        && isReversed,\n                      'fa-sort-up': sortType === 'Product'\n                        && !isReversed,\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Category\n\n              <a\n                href=\"#/\"\n                onClick={() => sortBy('Category')}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': sortType !== 'Category',\n                      'fa-sort-down': sortType === 'Category'\n                        && isReversed,\n                      'fa-sort-up': sortType === 'Category'\n                        && !isReversed,\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              User\n\n              <a\n                href=\"#/\"\n                onClick={() => sortBy('User')}\n              >\n                <span className=\"icon\">\n                  <i\n                    data-cy=\"SortIcon\"\n                    className={cn('fas', {\n                      'fa-sort': sortType !== 'User',\n                      'fa-sort-down': sortType === 'User'\n                        && isReversed,\n                      'fa-sort-up': sortType === 'User'\n                        && !isReversed,\n                    })}\n                  />\n                </span>\n              </a>\n            </span>\n          </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {products.map(product => (\n          <Product\n            product={product}\n            key={product.key}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\nimport { ProductTable } from './components/ProductsTable';\n\nfunction getVisibleProducts(\n  products, { query, selectedUserId, selectedCategory, sortType, isReversed },\n) {\n  let visibleProducts = [...products];\n\n  if (query) {\n    visibleProducts = visibleProducts.filter((product) => {\n      const productName = product.name.toLowerCase();\n      const normalizedQuery = query.trim().toLowerCase();\n\n      return productName.includes(normalizedQuery);\n    });\n  }\n\n  if (selectedCategory.length > 0) {\n    visibleProducts = visibleProducts.filter(\n      product => selectedCategory.includes(product.category.title),\n    );\n  }\n\n  if (selectedUserId) {\n    visibleProducts = visibleProducts.filter(\n      product => product.user.id === selectedUserId,\n    );\n  }\n\n  /**  Solution with if\n\n  if (sortType === 'ID') {\n    visibleProducts = visibleProducts.sort((id1, id2) => id1.id - id2.id);\n  }\n\n  if (['Products', 'Category', 'User'].includes(sortType)) {\n    visibleProducts = visibleProducts.sort((product1, product2) => {\n      const firstValue = product1[sortType]?.title || product1[sortType]?.name;\n      const secondValue = product2[sortType]?.title || product2[sortType]?.name;\n\n      return firstValue?.localeCompare(secondValue);\n    });\n  }\n  */\n\n  // Solution with switch\n  if (sortType) {\n    visibleProducts.sort((prA, prB) => {\n      switch (sortType) {\n        case 'ID':\n          return prA.id - prB.id;\n\n        case 'Product':\n          return prA.name.localeCompare(prB.name);\n\n        case 'Category':\n          return prA.category.title.localeCompare(prB.category.title);\n\n        case 'User':\n          return prA.user.name.localeCompare(prB.user.name);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleProducts = visibleProducts.reverse();\n  }\n\n  return visibleProducts;\n}\n\nexport const App = () => {\n  const products = productsFromServer.map((product) => {\n    const category = categoriesFromServer.find(\n      _category => _category.id === product.categoryId,\n    );\n    const user = usersFromServer.find(_user => _user.id === category.ownerId);\n\n    return {\n      ...product,\n      category,\n      user,\n    };\n  });\n\n  const [query, setQuery] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState([]);\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleProducts = getVisibleProducts(\n    products,\n    {\n      query,\n      selectedUserId,\n      selectedCategory,\n      sortType,\n      isReversed,\n    },\n  );\n\n  const onResetAllFilters = () => {\n    setQuery('');\n    setSelectedUserId(null);\n    setSelectedCategory([]);\n    setSortType('');\n    setIsReversed(false);\n  };\n\n  const onCategoryClick = (category) => {\n    if (selectedCategory.includes(category)) {\n      setSelectedCategory(currentCategory => currentCategory.filter(\n        current => current !== category,\n      ));\n    } else {\n      setSelectedCategory(currentCategory => [...currentCategory, category]);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={cn({\n                  'is-active': !selectedUserId,\n                })}\n                onClick={() => setSelectedUserId(null)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  key={user.id}\n                  data-cy=\"FilterUser\"\n                  href={`#/${user.id}`}\n                  className={cn({\n                    'is-active': user.id === selectedUserId,\n                  })}\n                  onClick={() => setSelectedUserId(user.id)}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                { query.trim() && (\n                <span className=\"icon is-right\">\n                  <button\n                    data-cy=\"ClearButton\"\n                    type=\"button\"\n                    className=\"delete\"\n                    onClick={() => setQuery('')}\n                  />\n                </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={\n                  cn('button is-success mr-6 ',\n                    { 'is-outlined': selectedCategory.length > 0 })\n                }\n                onClick={() => setSelectedCategory([])}\n              >\n                All\n              </a>\n\n              { categoriesFromServer.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={cn('button mr-2 my-1',\n                    { 'is-info': selectedCategory.includes(category.title) })\n                  }\n                  href={`#/${category.title}`}\n                  onClick={() => onCategoryClick(category.title)}\n                >\n                  {category.title}\n                </a>\n              ))}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={onResetAllFilters}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n\n          {visibleProducts.length === 0 && (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n\n          {visibleProducts.length > 0 && (\n            <ProductTable\n              products={visibleProducts}\n              sortType={sortType}\n              isReversed={isReversed}\n              onSortTypeChange={setSortType}\n              onIsReversedChange={setIsReversed}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}